services:
  aws-lambda:
    container_name: ${APP_NAME}_aws-lambda
    image: amazon/aws-lambda-nodejs:20
    command: index.handler
    volumes:
      - ./aws-lambda:/var/task
    ports:
      - ${AWS_LAMBDA_PORT}:8080

  di-container:
    container_name: ${APP_NAME}_di-container
    stdin_open: true
    build:
      context: di-container
      dockerfile: Dockerfile
    volumes:
      - "./di-container:/di-container"

  repository:
    container_name: ${APP_NAME}_repository
    stdin_open: true
    build:
      context: repository
      dockerfile: Dockerfile
    volumes:
      - "./repository:/repository"

  mailer:
    container_name: ${APP_NAME}_mailer
    stdin_open: true
    env_file:
      - .env
    ports:
      - ${REACT_EMAIL_PORT}:3000
    build:
      context: mailer
      dockerfile: Dockerfile
    volumes:
      - "./mailer:/mailer"

  authentication:
    container_name: ${APP_NAME}_authentication
    stdin_open: true
    env_file:
      - .env
    ports:
      - ${AUTHENTICATION_PORT}:3000
    build:
      context: authentication
      dockerfile: Dockerfile
    volumes:
      - "./authentication:/authentication"

  object-storage:
    container_name: ${APP_NAME}_object-storage
    stdin_open: true
    env_file:
      - .env
    build:
      context: object-storage
      dockerfile: Dockerfile
    volumes:
      - "./object-storage:/object-storage"

  job-queue:
    container_name: ${APP_NAME}_job-queue
    stdin_open: true
    env_file:
      - .env
    build:
      context: job-queue
      dockerfile: Dockerfile
    volumes:
      - "./job-queue:/job-queue"

  typed-routes:
    container_name: ${APP_NAME}_typed-routes
    stdin_open: true
    env_file:
      - .env
    build:
      context: typed-routes
      dockerfile: Dockerfile
    ports:
      - ${TYPED_ROUTES_PORT}:3000
    volumes:
      - "./typed-routes:/typed-routes"

  postgres:
    container_name: ${APP_NAME}_postgres
    image: postgres:18-alpine
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  minio:
    container_name: ${APP_NAME}_minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    command: server /data --console-address ":9090"
    env_file:
      - .env
    ports:
      - "${MINIO_SERVER_PORT}:9000"
      - "${MINIO_PORT}:9090"
    volumes:
      - minio:/data

  mailpit:
    container_name: ${APP_NAME}_mailpit
    image: axllent/mailpit
    ports:
      - "${MAILPIT_PORT}:8025"
      - "${MAILPIT_SMTP_PORT}:1025"

volumes:
  postgres:
  minio:
